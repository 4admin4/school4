import logging
import asyncio
import random
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –í—Å—Ç–∞–≤ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω –≤—ñ–¥ BotFather
TOKEN = "7620525697:AAFmUw8Dco4lt2PhWgfA22lVH_1EuzaBtRs"

logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

#–ö–Ω–æ–ø–∫–∏
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ü—Ä–∏–≤—ñ—Ç"), KeyboardButton(text="–Ø–∫ —Å–ø—Ä–∞–≤–∏?")],
        [KeyboardButton(text="–©–æ —Ç–∏ –≤–º—ñ—î—à?"), KeyboardButton(text="–®–∫–æ–ª–∞")]
    ],
    resize_keyboard=True  # –†–æ–±–∏–º–æ –∫–Ω–æ–ø–∫–∏ –∫–æ–º–ø–∞–∫—Ç–Ω–∏–º–∏
)

# –°–ø–∏—Å–æ–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
RESPONSES = {
    "–ü—Ä–∏–≤—ñ—Ç": "–ü—Ä–∏–≤—ñ—Ç! –Ø–∫ —Å–ø—Ä–∞–≤–∏? üòä",
    "–Ø–∫ —Å–ø—Ä–∞–≤–∏?": "–í—Å–µ —á—É–¥–æ–≤–æ! –ê –≤ —Ç–µ–±–µ?",
    "–©–æ —Ç–∏ –≤–º—ñ—î—à?": "–Ø –º–æ–∂—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è! üî•",
    "–®–∫–æ–ª–∞": "–ù–∞–≤—á–∞–Ω–Ω—è ‚Äî —Ü–µ –∫—Ä—É—Ç–æ! üìö"
}

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –í–∏–±–µ—Ä–∏ –ø–∏—Ç–∞–Ω–Ω—è:", reply_markup=keyboard)

# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫
@dp.message()
async def handle_buttons(message: types.Message):
    text = message.text.strip()  # –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–π–≤—ñ –ø—Ä–æ–±—ñ–ª–∏
    response = RESPONSES.get(text, "–Ø –Ω–µ –∑–Ω–∞—é, —â–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏... üòÖ")
    await message.answer(response)
# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
